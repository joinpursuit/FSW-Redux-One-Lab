{"ast":null,"code":"import _objectSpread from \"/Users/arzhuldahaku/Documents/MyFiles/Pursuit/Unit 5/Labs/Redux/Pursuit-Core-Web-Redux-One-Lab/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { INCREMENT, DECREMENT, EVENINCREMENT, ODDINCREMENT, ASYNCINCREMENT } from \"../actionTypes\";\nconst initialState = {\n  counter: 100\n};\n\nconst counterReducer = (state = initialState, action) => {\n  console.log('counterReducer running', action);\n\n  const stateCopy = _objectSpread({}, state); // Making a copy current state\n\n\n  switch (action.type) {\n    // cases and default\n    case INCREMENT:\n      stateCopy.counter = stateCopy.counter + 1;\n      break;\n\n    case DECREMENT:\n      stateCopy.counter--;\n      break;\n\n    case EVENINCREMENT:\n      if (stateCopy.counter % 2 === 0) {\n        stateCopy.counter++;\n        break;\n      } else {\n        break;\n      }\n\n    case ODDINCREMENT:\n      if (stateCopy.counter % 2 === 0) {\n        break;\n      } else {\n        stateCopy.counter++;\n        break;\n      }\n\n    case ASYNCINCREMENT:\n      setTimeout(function () {\n        stateCopy.counter++;\n      }, 1000);\n      break;\n\n    default:\n      break;\n  }\n\n  return stateCopy;\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["/Users/arzhuldahaku/Documents/MyFiles/Pursuit/Unit 5/Labs/Redux/Pursuit-Core-Web-Redux-One-Lab/src/Store/Reducers/counterReducer.js"],"names":["INCREMENT","DECREMENT","EVENINCREMENT","ODDINCREMENT","ASYNCINCREMENT","initialState","counter","counterReducer","state","action","console","log","stateCopy","type","setTimeout"],"mappings":";AACA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,YAA9C,EAA4DC,cAA5D,QAAkF,gBAAlF;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,MAAtC;;AAEA,QAAMG,SAAS,qBAAQJ,KAAR,CAAf,CAHuD,CAGxB;;;AAE/B,UAAQC,MAAM,CAACI,IAAf;AACE;AACA,SAAKb,SAAL;AACEY,MAAAA,SAAS,CAACN,OAAV,GAAoBM,SAAS,CAACN,OAAV,GAAoB,CAAxC;AACA;;AAEF,SAAKL,SAAL;AACEW,MAAAA,SAAS,CAACN,OAAV;AACA;;AAEF,SAAKJ,aAAL;AACE,UAAIU,SAAS,CAACN,OAAV,GAAoB,CAApB,KAA0B,CAA9B,EAAiC;AAC/BM,QAAAA,SAAS,CAACN,OAAV;AACA;AACD,OAHD,MAGO;AACL;AACD;;AAEH,SAAKH,YAAL;AACE,UAAIS,SAAS,CAACN,OAAV,GAAoB,CAApB,KAA0B,CAA9B,EAAiC;AAC/B;AACD,OAFD,MAEO;AACLM,QAAAA,SAAS,CAACN,OAAV;AACA;AACD;;AAEH,SAAKF,cAAL;AACEU,MAAAA,UAAU,CAAC,YAAW;AACpBF,QAAAA,SAAS,CAACN,OAAV;AACD,OAFS,EAEP,IAFO,CAAV;AAGE;;AAEJ;AACE;AAjCJ;;AAoCA,SAAOM,SAAP;AACD,CA1CD;;AA4CA,eAAeL,cAAf","sourcesContent":["\nimport { INCREMENT, DECREMENT, EVENINCREMENT, ODDINCREMENT, ASYNCINCREMENT } from \"../actionTypes\"\nconst initialState = {\n  counter: 100\n}\n\nconst counterReducer = (state = initialState, action) => {\n  console.log('counterReducer running', action);\n\n  const stateCopy = { ...state } // Making a copy current state\n\n  switch (action.type) {\n    // cases and default\n    case INCREMENT:\n      stateCopy.counter = stateCopy.counter + 1\n      break;\n\n    case DECREMENT:\n      stateCopy.counter--;\n      break;\n\n    case EVENINCREMENT:\n      if (stateCopy.counter % 2 === 0) {\n        stateCopy.counter++;\n        break;\n      } else {\n        break;\n      }\n\n    case ODDINCREMENT:\n      if (stateCopy.counter % 2 === 0) {\n        break;\n      } else {\n        stateCopy.counter++;\n        break;\n      }\n\n    case ASYNCINCREMENT:\n      setTimeout(function() {\n        stateCopy.counter++;\n      }, 1000);\n        break;\n        \n    default:\n      break;\n  }\n\n  return stateCopy\n}\n\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}